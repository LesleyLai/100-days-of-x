* 100 Days of reading round 1
The focus of this round is Computer Graphics books and papers.

** [[https://twitter.com/LesleyLai6/status/1207530946288701440?s=20][Day 1]]: December 18th, 2019
*** Today's Progress:
   Read [[http://www.realtimerendering.com/raytracinggems/][Ray Tracing Gems]] chapter 1 and chapter 2.

*** Thoughts
    Want to read this book for awhile, glad to start

** [[https://twitter.com/LesleyLai6/status/1207903500031520770?s=20][Day 2]]: December 19th, 2019
*** Today's Progress:
   Read [[http://www.realtimerendering.com/raytracinggems/][Ray Tracing Gems]] chapter 3.1-3.6.

*** Thoughts
    This chapter is about DirectX Ray Tracing. I don't have a Windows machine with DirectX ray tracing capability, so there are no way I can run the code. However, DirectX Ray Tracing API is very similar to the Vulkan and Optix conterparts, so it is still worthwhile to read.

** [[https://twitter.com/LesleyLai6/status/1207903500031520770?s=20][Day 3]]: December 20th, 2019
*** Today's Progress:
   Read [[http://www.realtimerendering.com/raytracinggems/][Ray Tracing Gems]] chapter 4 "A Planetarium Dome Master Camera"

*** Thoughts
    The author talks about technical details and considerations of designing "A Planetarium Dome Master Camera." The use cases of the "Planetarium Camera" itself is quite limited, and it is not likely that I would write such code in my life. However, the article is a good introduction to design any kind of none-standard camera.

** [[https://twitter.com/LesleyLai6/status/1208585712120909824?s=20][Day 4]]: December 21st, 2019
*** Today's Progress:
    - Setup a develop environment for OCaml and read [[http://dev.realworldocaml.org/toc.html][Real World OCaml]].
    - Read [[http://www.pbr-book.org/][Physically Based Rendering]] Chapter 1 and 2.1-2.6

*** Thoughts
    I feel like some chapters of "Ray Tracing Gems" book may be too difficult for me now, so instead I would read the venerable "Physically Based Rendering" book first as a general introduction to different algorithms.

    I also start to experiment a bit with the OCaml programming language. So far I find the language impressive, though they do make few mistake when design the language to make some of the syntax gratuitous.

** [[https://twitter.com/LesleyLai6/status/1208971467628535810?s=20][Day 5]]: December 22nd, 2019
*** Today's Progress:
    - Read [[http://dev.realworldocaml.org/toc.html][Real World OCaml]] Chapter 2
    - Read [[http://home.pipeline.com/~hbaker1/CheneyMTA.html][CONS Should Not CONS Its Arguments, Part II: Cheney on the M.T.A]]
    - Read [[http://www.pbr-book.org/][Physically Based Rendering]] 2.7

*** Thoughts
   "Cheney on the M.T.A" describes an interesting way to compile tail calls into CPS and allocate closures on the stack.

** [[https://twitter.com/LesleyLai6/status/1209515835061964800?s=20][Day 6]]: December 23rd, 2019
*** Today's Progress:
    - Read [[http://dev.realworldocaml.org/toc.html][Real World OCaml]] Chapter 3
    - Read [[http://www.pbr-book.org/][Physically Based Rendering]] 2.8

** [[https://twitter.com/LesleyLai6/status/1209742864101433344?s=20][Day 7]]: December 24th, 2019
*** Today's Progress:
    - Read [[http://dev.realworldocaml.org/toc.html][Real World OCaml]] Chapter 4
    - Read [[http://www.pbr-book.org/][Physically Based Rendering]] 2.9-2.10

** [[https://twitter.com/LesleyLai6/status/1210161503115956224?s=20][Day 8]]: December 25th, 2019
*** Today's Progress:
    - Sphere Tracing: A Geometric Method for the Antialiased Ray Tracing of Implicit Surfaces
    - Practical Foundations for Programming Languages 1.1

*** Thoughts
    Reading those books on the flight to China. The original Sphere Tracing paper contains not only the algorithms and implementations, but also a lot of formal proofs. I am glad that the proof techniques in this paper overlaps a lot with what I learnt from the mathematics analysis course. Though I implemented the sphere tracing algorithm multiple times before, I never had a theoretical treatment on that.

    The book "Practical Foundations for Programming Languages" is the textbook I need to read next semester, so I start to read it early. It is a hard read and I hope it is writtern in a more beginner friendly term.

** Jetlagging interlude

** [[https://twitter.com/LesleyLai6/status/1210896525309698048?s=20][Day 9]]: December 28th, 2019
*** Today's Progress:
    - Real World OCaml Chapter 5

*** Thoughts
    OCaml's "records as named types" combined with type inference on field names causes ambiguity.

** [[https://twitter.com/LesleyLai6/status/1211250939274752002?s=20][Day 10]]: December 29th, 2019
*** Today's Progress:
    - Real World OCaml Chapter 6

*** Thoughts
    Polymorphic Variants are interesting, I wonder how they got implemented

** [[https://twitter.com/LesleyLai6/status/1211629960076488704?s=20][Day 11]]: December 30th, 2019
*** Today's Progress:
    - Real World OCaml Chapter 7
